--- dlls/winevulkan/loader_thunks.h
+++ dlls/winevulkan/loader_thunks.h
@@ -38,6 +38,7 @@ enum unix_call
     unix_vkCmdBeginRenderPass,
     unix_vkCmdBeginRenderPass2,
     unix_vkCmdBeginRenderPass2KHR,
+    unix_vkCmdBeginRendering,
     unix_vkCmdBeginRenderingKHR,
     unix_vkCmdBeginTransformFeedbackEXT,
     unix_vkCmdBindDescriptorSets,
@@ -48,8 +49,10 @@ enum unix_call
     unix_vkCmdBindShadingRateImageNV,
     unix_vkCmdBindTransformFeedbackBuffersEXT,
     unix_vkCmdBindVertexBuffers,
+    unix_vkCmdBindVertexBuffers2,
     unix_vkCmdBindVertexBuffers2EXT,
     unix_vkCmdBlitImage,
+    unix_vkCmdBlitImage2,
     unix_vkCmdBlitImage2KHR,
     unix_vkCmdBuildAccelerationStructureNV,
     unix_vkCmdBuildAccelerationStructuresIndirectKHR,
@@ -61,12 +64,16 @@ enum unix_call
     unix_vkCmdCopyAccelerationStructureNV,
     unix_vkCmdCopyAccelerationStructureToMemoryKHR,
     unix_vkCmdCopyBuffer,
+    unix_vkCmdCopyBuffer2,
     unix_vkCmdCopyBuffer2KHR,
     unix_vkCmdCopyBufferToImage,
+    unix_vkCmdCopyBufferToImage2,
     unix_vkCmdCopyBufferToImage2KHR,
     unix_vkCmdCopyImage,
+    unix_vkCmdCopyImage2,
     unix_vkCmdCopyImage2KHR,
     unix_vkCmdCopyImageToBuffer,
+    unix_vkCmdCopyImageToBuffer2,
     unix_vkCmdCopyImageToBuffer2KHR,
     unix_vkCmdCopyMemoryToAccelerationStructureKHR,
     unix_vkCmdCopyQueryPoolResults,
@@ -101,6 +108,7 @@ enum unix_call
     unix_vkCmdEndRenderPass,
     unix_vkCmdEndRenderPass2,
     unix_vkCmdEndRenderPass2KHR,
+    unix_vkCmdEndRendering,
     unix_vkCmdEndRenderingKHR,
     unix_vkCmdEndTransformFeedbackEXT,
     unix_vkCmdExecuteCommands,
@@ -111,36 +119,47 @@ enum unix_call
     unix_vkCmdNextSubpass2,
     unix_vkCmdNextSubpass2KHR,
     unix_vkCmdPipelineBarrier,
+    unix_vkCmdPipelineBarrier2,
     unix_vkCmdPipelineBarrier2KHR,
     unix_vkCmdPreprocessGeneratedCommandsNV,
     unix_vkCmdPushConstants,
     unix_vkCmdPushDescriptorSetKHR,
     unix_vkCmdPushDescriptorSetWithTemplateKHR,
     unix_vkCmdResetEvent,
+    unix_vkCmdResetEvent2,
     unix_vkCmdResetEvent2KHR,
     unix_vkCmdResetQueryPool,
     unix_vkCmdResolveImage,
+    unix_vkCmdResolveImage2,
     unix_vkCmdResolveImage2KHR,
     unix_vkCmdSetBlendConstants,
     unix_vkCmdSetCheckpointNV,
     unix_vkCmdSetCoarseSampleOrderNV,
     unix_vkCmdSetColorWriteEnableEXT,
+    unix_vkCmdSetCullMode,
     unix_vkCmdSetCullModeEXT,
     unix_vkCmdSetDepthBias,
+    unix_vkCmdSetDepthBiasEnable,
     unix_vkCmdSetDepthBiasEnableEXT,
     unix_vkCmdSetDepthBounds,
+    unix_vkCmdSetDepthBoundsTestEnable,
     unix_vkCmdSetDepthBoundsTestEnableEXT,
+    unix_vkCmdSetDepthCompareOp,
     unix_vkCmdSetDepthCompareOpEXT,
+    unix_vkCmdSetDepthTestEnable,
     unix_vkCmdSetDepthTestEnableEXT,
+    unix_vkCmdSetDepthWriteEnable,
     unix_vkCmdSetDepthWriteEnableEXT,
     unix_vkCmdSetDeviceMask,
     unix_vkCmdSetDeviceMaskKHR,
     unix_vkCmdSetDiscardRectangleEXT,
     unix_vkCmdSetEvent,
+    unix_vkCmdSetEvent2,
     unix_vkCmdSetEvent2KHR,
     unix_vkCmdSetExclusiveScissorNV,
     unix_vkCmdSetFragmentShadingRateEnumNV,
     unix_vkCmdSetFragmentShadingRateKHR,
+    unix_vkCmdSetFrontFace,
     unix_vkCmdSetFrontFaceEXT,
     unix_vkCmdSetLineStippleEXT,
     unix_vkCmdSetLineWidth,
@@ -149,22 +168,29 @@ enum unix_call
     unix_vkCmdSetPerformanceMarkerINTEL,
     unix_vkCmdSetPerformanceOverrideINTEL,
     unix_vkCmdSetPerformanceStreamMarkerINTEL,
+    unix_vkCmdSetPrimitiveRestartEnable,
     unix_vkCmdSetPrimitiveRestartEnableEXT,
+    unix_vkCmdSetPrimitiveTopology,
     unix_vkCmdSetPrimitiveTopologyEXT,
+    unix_vkCmdSetRasterizerDiscardEnable,
     unix_vkCmdSetRasterizerDiscardEnableEXT,
     unix_vkCmdSetRayTracingPipelineStackSizeKHR,
     unix_vkCmdSetSampleLocationsEXT,
     unix_vkCmdSetScissor,
+    unix_vkCmdSetScissorWithCount,
     unix_vkCmdSetScissorWithCountEXT,
     unix_vkCmdSetStencilCompareMask,
+    unix_vkCmdSetStencilOp,
     unix_vkCmdSetStencilOpEXT,
     unix_vkCmdSetStencilReference,
+    unix_vkCmdSetStencilTestEnable,
     unix_vkCmdSetStencilTestEnableEXT,
     unix_vkCmdSetStencilWriteMask,
     unix_vkCmdSetVertexInputEXT,
     unix_vkCmdSetViewport,
     unix_vkCmdSetViewportShadingRatePaletteNV,
     unix_vkCmdSetViewportWScalingNV,
+    unix_vkCmdSetViewportWithCount,
     unix_vkCmdSetViewportWithCountEXT,
     unix_vkCmdSubpassShadingHUAWEI,
     unix_vkCmdTraceRaysIndirectKHR,
@@ -172,12 +198,14 @@ enum unix_call
     unix_vkCmdTraceRaysNV,
     unix_vkCmdUpdateBuffer,
     unix_vkCmdWaitEvents,
+    unix_vkCmdWaitEvents2,
     unix_vkCmdWaitEvents2KHR,
     unix_vkCmdWriteAccelerationStructuresPropertiesKHR,
     unix_vkCmdWriteAccelerationStructuresPropertiesNV,
     unix_vkCmdWriteBufferMarker2AMD,
     unix_vkCmdWriteBufferMarkerAMD,
     unix_vkCmdWriteTimestamp,
+    unix_vkCmdWriteTimestamp2,
     unix_vkCmdWriteTimestamp2KHR,
     unix_vkCompileDeferredNV,
     unix_vkCopyAccelerationStructureKHR,
@@ -209,6 +237,7 @@ enum unix_call
     unix_vkCreateInstance,
     unix_vkCreatePipelineCache,
     unix_vkCreatePipelineLayout,
+    unix_vkCreatePrivateDataSlot,
     unix_vkCreatePrivateDataSlotEXT,
     unix_vkCreateQueryPool,
     unix_vkCreateRayTracingPipelinesKHR,
@@ -253,6 +282,7 @@ enum unix_call
     unix_vkDestroyPipeline,
     unix_vkDestroyPipelineCache,
     unix_vkDestroyPipelineLayout,
+    unix_vkDestroyPrivateDataSlot,
     unix_vkDestroyPrivateDataSlotEXT,
     unix_vkDestroyQueryPool,
     unix_vkDestroyRenderPass,
@@ -296,12 +326,15 @@ enum unix_call
     unix_vkGetDescriptorSetLayoutSupport,
     unix_vkGetDescriptorSetLayoutSupportKHR,
     unix_vkGetDeviceAccelerationStructureCompatibilityKHR,
+    unix_vkGetDeviceBufferMemoryRequirements,
     unix_vkGetDeviceBufferMemoryRequirementsKHR,
     unix_vkGetDeviceGroupPeerMemoryFeatures,
     unix_vkGetDeviceGroupPeerMemoryFeaturesKHR,
     unix_vkGetDeviceGroupPresentCapabilitiesKHR,
     unix_vkGetDeviceGroupSurfacePresentModesKHR,
+    unix_vkGetDeviceImageMemoryRequirements,
     unix_vkGetDeviceImageMemoryRequirementsKHR,
+    unix_vkGetDeviceImageSparseMemoryRequirements,
     unix_vkGetDeviceImageSparseMemoryRequirementsKHR,
     unix_vkGetDeviceMemoryCommitment,
     unix_vkGetDeviceMemoryOpaqueCaptureAddress,
@@ -363,12 +396,14 @@ enum unix_call
     unix_vkGetPhysicalDeviceSurfaceFormatsKHR,
     unix_vkGetPhysicalDeviceSurfacePresentModesKHR,
     unix_vkGetPhysicalDeviceSurfaceSupportKHR,
+    unix_vkGetPhysicalDeviceToolProperties,
     unix_vkGetPhysicalDeviceToolPropertiesEXT,
     unix_vkGetPhysicalDeviceWin32PresentationSupportKHR,
     unix_vkGetPipelineCacheData,
     unix_vkGetPipelineExecutableInternalRepresentationsKHR,
     unix_vkGetPipelineExecutablePropertiesKHR,
     unix_vkGetPipelineExecutableStatisticsKHR,
+    unix_vkGetPrivateData,
     unix_vkGetPrivateDataEXT,
     unix_vkGetQueryPoolResults,
     unix_vkGetQueueCheckpointData2NV,
@@ -395,6 +430,7 @@ enum unix_call
     unix_vkQueuePresentKHR,
     unix_vkQueueSetPerformanceConfigurationINTEL,
     unix_vkQueueSubmit,
+    unix_vkQueueSubmit2,
     unix_vkQueueSubmit2KHR,
     unix_vkQueueWaitIdle,
     unix_vkReleasePerformanceConfigurationINTEL,
@@ -410,6 +446,7 @@ enum unix_call
     unix_vkSetDebugUtilsObjectTagEXT,
     unix_vkSetDeviceMemoryPriorityEXT,
     unix_vkSetEvent,
+    unix_vkSetPrivateData,
     unix_vkSetPrivateDataEXT,
     unix_vkSignalSemaphore,
     unix_vkSignalSemaphoreKHR,
@@ -599,6 +636,12 @@ struct vkCmdBeginRenderPass2KHR_params
     const VkSubpassBeginInfo *pSubpassBeginInfo;
 };
 
+struct vkCmdBeginRendering_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkRenderingInfo *pRenderingInfo;
+};
+
 struct vkCmdBeginRenderingKHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -682,6 +725,17 @@ struct vkCmdBindVertexBuffers_params
     const VkDeviceSize *pOffsets;
 };
 
+struct vkCmdBindVertexBuffers2_params
+{
+    VkCommandBuffer commandBuffer;
+    uint32_t firstBinding;
+    uint32_t bindingCount;
+    const VkBuffer *pBuffers;
+    const VkDeviceSize *pOffsets;
+    const VkDeviceSize *pSizes;
+    const VkDeviceSize *pStrides;
+};
+
 struct vkCmdBindVertexBuffers2EXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -705,6 +759,12 @@ struct vkCmdBlitImage_params
     VkFilter filter;
 };
 
+struct vkCmdBlitImage2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkBlitImageInfo2 *pBlitImageInfo;
+};
+
 struct vkCmdBlitImage2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -800,6 +860,12 @@ struct vkCmdCopyBuffer_params
     const VkBufferCopy *pRegions;
 };
 
+struct vkCmdCopyBuffer2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkCopyBufferInfo2 *pCopyBufferInfo;
+};
+
 struct vkCmdCopyBuffer2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -816,6 +882,12 @@ struct vkCmdCopyBufferToImage_params
     const VkBufferImageCopy *pRegions;
 };
 
+struct vkCmdCopyBufferToImage2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkCopyBufferToImageInfo2 *pCopyBufferToImageInfo;
+};
+
 struct vkCmdCopyBufferToImage2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -833,6 +905,12 @@ struct vkCmdCopyImage_params
     const VkImageCopy *pRegions;
 };
 
+struct vkCmdCopyImage2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkCopyImageInfo2 *pCopyImageInfo;
+};
+
 struct vkCmdCopyImage2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -849,6 +927,12 @@ struct vkCmdCopyImageToBuffer_params
     const VkBufferImageCopy *pRegions;
 };
 
+struct vkCmdCopyImageToBuffer2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkCopyImageToBufferInfo2 *pCopyImageToBufferInfo;
+};
+
 struct vkCmdCopyImageToBuffer2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1137,6 +1221,11 @@ struct vkCmdEndRenderPass2KHR_params
     const VkSubpassEndInfo *pSubpassEndInfo;
 };
 
+struct vkCmdEndRendering_params
+{
+    VkCommandBuffer commandBuffer;
+};
+
 struct vkCmdEndRenderingKHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1214,6 +1303,12 @@ struct vkCmdPipelineBarrier_params
     const VkImageMemoryBarrier *pImageMemoryBarriers;
 };
 
+struct vkCmdPipelineBarrier2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkDependencyInfo *pDependencyInfo;
+};
+
 struct vkCmdPipelineBarrier2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1262,6 +1357,13 @@ struct vkCmdResetEvent_params
     VkPipelineStageFlags stageMask;
 };
 
+struct vkCmdResetEvent2_params
+{
+    VkCommandBuffer commandBuffer;
+    VkEvent event;
+    VkPipelineStageFlags2 stageMask;
+};
+
 struct vkCmdResetEvent2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1288,6 +1390,12 @@ struct vkCmdResolveImage_params
     const VkImageResolve *pRegions;
 };
 
+struct vkCmdResolveImage2_params
+{
+    VkCommandBuffer commandBuffer;
+    const VkResolveImageInfo2 *pResolveImageInfo;
+};
+
 struct vkCmdResolveImage2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1321,6 +1429,12 @@ struct vkCmdSetColorWriteEnableEXT_params
     const VkBool32 *pColorWriteEnables;
 };
 
+struct vkCmdSetCullMode_params
+{
+    VkCommandBuffer commandBuffer;
+    VkCullModeFlags cullMode;
+};
+
 struct vkCmdSetCullModeEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1335,6 +1449,12 @@ struct vkCmdSetDepthBias_params
     float depthBiasSlopeFactor;
 };
 
+struct vkCmdSetDepthBiasEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 depthBiasEnable;
+};
+
 struct vkCmdSetDepthBiasEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1348,24 +1468,48 @@ struct vkCmdSetDepthBounds_params
     float maxDepthBounds;
 };
 
+struct vkCmdSetDepthBoundsTestEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 depthBoundsTestEnable;
+};
+
 struct vkCmdSetDepthBoundsTestEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
     VkBool32 depthBoundsTestEnable;
 };
 
+struct vkCmdSetDepthCompareOp_params
+{
+    VkCommandBuffer commandBuffer;
+    VkCompareOp depthCompareOp;
+};
+
 struct vkCmdSetDepthCompareOpEXT_params
 {
     VkCommandBuffer commandBuffer;
     VkCompareOp depthCompareOp;
 };
 
+struct vkCmdSetDepthTestEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 depthTestEnable;
+};
+
 struct vkCmdSetDepthTestEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
     VkBool32 depthTestEnable;
 };
 
+struct vkCmdSetDepthWriteEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 depthWriteEnable;
+};
+
 struct vkCmdSetDepthWriteEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1399,6 +1543,13 @@ struct vkCmdSetEvent_params
     VkPipelineStageFlags stageMask;
 };
 
+struct vkCmdSetEvent2_params
+{
+    VkCommandBuffer commandBuffer;
+    VkEvent event;
+    const VkDependencyInfo *pDependencyInfo;
+};
+
 struct vkCmdSetEvent2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1428,6 +1579,12 @@ struct vkCmdSetFragmentShadingRateKHR_params
     const VkFragmentShadingRateCombinerOpKHR *combinerOps;
 };
 
+struct vkCmdSetFrontFace_params
+{
+    VkCommandBuffer commandBuffer;
+    VkFrontFace frontFace;
+};
+
 struct vkCmdSetFrontFaceEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1477,18 +1634,36 @@ struct vkCmdSetPerformanceStreamMarkerINTEL_params
     const VkPerformanceStreamMarkerInfoINTEL *pMarkerInfo;
 };
 
+struct vkCmdSetPrimitiveRestartEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 primitiveRestartEnable;
+};
+
 struct vkCmdSetPrimitiveRestartEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
     VkBool32 primitiveRestartEnable;
 };
 
+struct vkCmdSetPrimitiveTopology_params
+{
+    VkCommandBuffer commandBuffer;
+    VkPrimitiveTopology primitiveTopology;
+};
+
 struct vkCmdSetPrimitiveTopologyEXT_params
 {
     VkCommandBuffer commandBuffer;
     VkPrimitiveTopology primitiveTopology;
 };
 
+struct vkCmdSetRasterizerDiscardEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 rasterizerDiscardEnable;
+};
+
 struct vkCmdSetRasterizerDiscardEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1515,6 +1690,13 @@ struct vkCmdSetScissor_params
     const VkRect2D *pScissors;
 };
 
+struct vkCmdSetScissorWithCount_params
+{
+    VkCommandBuffer commandBuffer;
+    uint32_t scissorCount;
+    const VkRect2D *pScissors;
+};
+
 struct vkCmdSetScissorWithCountEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1529,6 +1711,16 @@ struct vkCmdSetStencilCompareMask_params
     uint32_t compareMask;
 };
 
+struct vkCmdSetStencilOp_params
+{
+    VkCommandBuffer commandBuffer;
+    VkStencilFaceFlags faceMask;
+    VkStencilOp failOp;
+    VkStencilOp passOp;
+    VkStencilOp depthFailOp;
+    VkCompareOp compareOp;
+};
+
 struct vkCmdSetStencilOpEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1546,6 +1738,12 @@ struct vkCmdSetStencilReference_params
     uint32_t reference;
 };
 
+struct vkCmdSetStencilTestEnable_params
+{
+    VkCommandBuffer commandBuffer;
+    VkBool32 stencilTestEnable;
+};
+
 struct vkCmdSetStencilTestEnableEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1592,6 +1790,13 @@ struct vkCmdSetViewportWScalingNV_params
     const VkViewportWScalingNV *pViewportWScalings;
 };
 
+struct vkCmdSetViewportWithCount_params
+{
+    VkCommandBuffer commandBuffer;
+    uint32_t viewportCount;
+    const VkViewport *pViewports;
+};
+
 struct vkCmdSetViewportWithCountEXT_params
 {
     VkCommandBuffer commandBuffer;
@@ -1669,6 +1874,14 @@ struct vkCmdWaitEvents_params
     const VkImageMemoryBarrier *pImageMemoryBarriers;
 };
 
+struct vkCmdWaitEvents2_params
+{
+    VkCommandBuffer commandBuffer;
+    uint32_t eventCount;
+    const VkEvent *pEvents;
+    const VkDependencyInfo *pDependencyInfos;
+};
+
 struct vkCmdWaitEvents2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1723,6 +1936,14 @@ struct vkCmdWriteTimestamp_params
     uint32_t query;
 };
 
+struct vkCmdWriteTimestamp2_params
+{
+    VkCommandBuffer commandBuffer;
+    VkPipelineStageFlags2 stage;
+    VkQueryPool queryPool;
+    uint32_t query;
+};
+
 struct vkCmdWriteTimestamp2KHR_params
 {
     VkCommandBuffer commandBuffer;
@@ -1969,6 +2190,14 @@ struct vkCreatePipelineLayout_params
     VkPipelineLayout *pPipelineLayout;
 };
 
+struct vkCreatePrivateDataSlot_params
+{
+    VkDevice device;
+    const VkPrivateDataSlotCreateInfo *pCreateInfo;
+    const VkAllocationCallbacks *pAllocator;
+    VkPrivateDataSlot *pPrivateDataSlot;
+};
+
 struct vkCreatePrivateDataSlotEXT_params
 {
     VkDevice device;
@@ -2297,6 +2526,13 @@ struct vkDestroyPipelineLayout_params
     const VkAllocationCallbacks *pAllocator;
 };
 
+struct vkDestroyPrivateDataSlot_params
+{
+    VkDevice device;
+    VkPrivateDataSlot privateDataSlot;
+    const VkAllocationCallbacks *pAllocator;
+};
+
 struct vkDestroyPrivateDataSlotEXT_params
 {
     VkDevice device;
@@ -2600,6 +2836,13 @@ struct vkGetDeviceAccelerationStructureCompatibilityKHR_params
     VkAccelerationStructureCompatibilityKHR *pCompatibility;
 };
 
+struct vkGetDeviceBufferMemoryRequirements_params
+{
+    VkDevice device;
+    const VkDeviceBufferMemoryRequirements *pInfo;
+    VkMemoryRequirements2 *pMemoryRequirements;
+};
+
 struct vkGetDeviceBufferMemoryRequirementsKHR_params
 {
     VkDevice device;
@@ -2638,6 +2881,13 @@ struct vkGetDeviceGroupSurfacePresentModesKHR_params
     VkDeviceGroupPresentModeFlagsKHR *pModes;
 };
 
+struct vkGetDeviceImageMemoryRequirements_params
+{
+    VkDevice device;
+    const VkDeviceImageMemoryRequirements *pInfo;
+    VkMemoryRequirements2 *pMemoryRequirements;
+};
+
 struct vkGetDeviceImageMemoryRequirementsKHR_params
 {
     VkDevice device;
@@ -2645,6 +2895,14 @@ struct vkGetDeviceImageMemoryRequirementsKHR_params
     VkMemoryRequirements2 *pMemoryRequirements;
 };
 
+struct vkGetDeviceImageSparseMemoryRequirements_params
+{
+    VkDevice device;
+    const VkDeviceImageMemoryRequirements *pInfo;
+    uint32_t *pSparseMemoryRequirementCount;
+    VkSparseImageMemoryRequirements2 *pSparseMemoryRequirements;
+};
+
 struct vkGetDeviceImageSparseMemoryRequirementsKHR_params
 {
     VkDevice device;
@@ -3083,6 +3341,13 @@ struct vkGetPhysicalDeviceSurfaceSupportKHR_params
     VkBool32 *pSupported;
 };
 
+struct vkGetPhysicalDeviceToolProperties_params
+{
+    VkPhysicalDevice physicalDevice;
+    uint32_t *pToolCount;
+    VkPhysicalDeviceToolProperties *pToolProperties;
+};
+
 struct vkGetPhysicalDeviceToolPropertiesEXT_params
 {
     VkPhysicalDevice physicalDevice;
@@ -3128,6 +3393,15 @@ struct vkGetPipelineExecutableStatisticsKHR_params
     VkPipelineExecutableStatisticKHR *pStatistics;
 };
 
+struct vkGetPrivateData_params
+{
+    VkDevice device;
+    VkObjectType objectType;
+    uint64_t objectHandle;
+    VkPrivateDataSlot privateDataSlot;
+    uint64_t *pData;
+};
+
 struct vkGetPrivateDataEXT_params
 {
     VkDevice device;
@@ -3332,6 +3606,14 @@ struct vkQueueSubmit_params
     VkFence fence;
 };
 
+struct vkQueueSubmit2_params
+{
+    VkQueue queue;
+    uint32_t submitCount;
+    const VkSubmitInfo2 *pSubmits;
+    VkFence fence;
+};
+
 struct vkQueueSubmit2KHR_params
 {
     VkQueue queue;
@@ -3430,6 +3712,15 @@ struct vkSetEvent_params
     VkEvent event;
 };
 
+struct vkSetPrivateData_params
+{
+    VkDevice device;
+    VkObjectType objectType;
+    uint64_t objectHandle;
+    VkPrivateDataSlot privateDataSlot;
+    uint64_t data;
+};
+
 struct vkSetPrivateDataEXT_params
 {
     VkDevice device;
