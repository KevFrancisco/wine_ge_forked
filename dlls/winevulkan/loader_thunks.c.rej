--- dlls/winevulkan/loader_thunks.c
+++ dlls/winevulkan/loader_thunks.c
@@ -227,6 +227,14 @@ void WINAPI vkCmdBeginRenderPass2KHR(VkCommandBuffer commandBuffer, const VkRend
     unix_funcs->p_vk_call(unix_vkCmdBeginRenderPass2KHR, &params);
 }
 
+void WINAPI vkCmdBeginRendering(VkCommandBuffer commandBuffer, const VkRenderingInfo *pRenderingInfo)
+{
+    struct vkCmdBeginRendering_params params;
+    params.commandBuffer = commandBuffer;
+    params.pRenderingInfo = pRenderingInfo;
+    unix_funcs->p_vk_call(unix_vkCmdBeginRendering, &params);
+}
+
 void WINAPI vkCmdBeginRenderingKHR(VkCommandBuffer commandBuffer, const VkRenderingInfo *pRenderingInfo)
 {
     struct vkCmdBeginRenderingKHR_params params;
@@ -330,6 +338,19 @@ void WINAPI vkCmdBindVertexBuffers(VkCommandBuffer commandBuffer, uint32_t first
     unix_funcs->p_vk_call(unix_vkCmdBindVertexBuffers, &params);
 }
 
+void WINAPI vkCmdBindVertexBuffers2(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer *pBuffers, const VkDeviceSize *pOffsets, const VkDeviceSize *pSizes, const VkDeviceSize *pStrides)
+{
+    struct vkCmdBindVertexBuffers2_params params;
+    params.commandBuffer = commandBuffer;
+    params.firstBinding = firstBinding;
+    params.bindingCount = bindingCount;
+    params.pBuffers = pBuffers;
+    params.pOffsets = pOffsets;
+    params.pSizes = pSizes;
+    params.pStrides = pStrides;
+    unix_funcs->p_vk_call(unix_vkCmdBindVertexBuffers2, &params);
+}
+
 void WINAPI vkCmdBindVertexBuffers2EXT(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer *pBuffers, const VkDeviceSize *pOffsets, const VkDeviceSize *pSizes, const VkDeviceSize *pStrides)
 {
     struct vkCmdBindVertexBuffers2EXT_params params;
@@ -357,6 +378,14 @@ void WINAPI vkCmdBlitImage(VkCommandBuffer commandBuffer, VkImage srcImage, VkIm
     unix_funcs->p_vk_call(unix_vkCmdBlitImage, &params);
 }
 
+void WINAPI vkCmdBlitImage2(VkCommandBuffer commandBuffer, const VkBlitImageInfo2 *pBlitImageInfo)
+{
+    struct vkCmdBlitImage2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pBlitImageInfo = pBlitImageInfo;
+    unix_funcs->p_vk_call(unix_vkCmdBlitImage2, &params);
+}
+
 void WINAPI vkCmdBlitImage2KHR(VkCommandBuffer commandBuffer, const VkBlitImageInfo2 *pBlitImageInfo)
 {
     struct vkCmdBlitImage2KHR_params params;
@@ -474,6 +503,14 @@ void WINAPI vkCmdCopyBuffer(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, V
     unix_funcs->p_vk_call(unix_vkCmdCopyBuffer, &params);
 }
 
+void WINAPI vkCmdCopyBuffer2(VkCommandBuffer commandBuffer, const VkCopyBufferInfo2 *pCopyBufferInfo)
+{
+    struct vkCmdCopyBuffer2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pCopyBufferInfo = pCopyBufferInfo;
+    unix_funcs->p_vk_call(unix_vkCmdCopyBuffer2, &params);
+}
+
 void WINAPI vkCmdCopyBuffer2KHR(VkCommandBuffer commandBuffer, const VkCopyBufferInfo2 *pCopyBufferInfo)
 {
     struct vkCmdCopyBuffer2KHR_params params;
@@ -494,6 +531,14 @@ void WINAPI vkCmdCopyBufferToImage(VkCommandBuffer commandBuffer, VkBuffer srcBu
     unix_funcs->p_vk_call(unix_vkCmdCopyBufferToImage, &params);
 }
 
+void WINAPI vkCmdCopyBufferToImage2(VkCommandBuffer commandBuffer, const VkCopyBufferToImageInfo2 *pCopyBufferToImageInfo)
+{
+    struct vkCmdCopyBufferToImage2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pCopyBufferToImageInfo = pCopyBufferToImageInfo;
+    unix_funcs->p_vk_call(unix_vkCmdCopyBufferToImage2, &params);
+}
+
 void WINAPI vkCmdCopyBufferToImage2KHR(VkCommandBuffer commandBuffer, const VkCopyBufferToImageInfo2 *pCopyBufferToImageInfo)
 {
     struct vkCmdCopyBufferToImage2KHR_params params;
@@ -515,6 +560,14 @@ void WINAPI vkCmdCopyImage(VkCommandBuffer commandBuffer, VkImage srcImage, VkIm
     unix_funcs->p_vk_call(unix_vkCmdCopyImage, &params);
 }
 
+void WINAPI vkCmdCopyImage2(VkCommandBuffer commandBuffer, const VkCopyImageInfo2 *pCopyImageInfo)
+{
+    struct vkCmdCopyImage2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pCopyImageInfo = pCopyImageInfo;
+    unix_funcs->p_vk_call(unix_vkCmdCopyImage2, &params);
+}
+
 void WINAPI vkCmdCopyImage2KHR(VkCommandBuffer commandBuffer, const VkCopyImageInfo2 *pCopyImageInfo)
 {
     struct vkCmdCopyImage2KHR_params params;
@@ -535,6 +588,14 @@ void WINAPI vkCmdCopyImageToBuffer(VkCommandBuffer commandBuffer, VkImage srcIma
     unix_funcs->p_vk_call(unix_vkCmdCopyImageToBuffer, &params);
 }
 
+void WINAPI vkCmdCopyImageToBuffer2(VkCommandBuffer commandBuffer, const VkCopyImageToBufferInfo2 *pCopyImageToBufferInfo)
+{
+    struct vkCmdCopyImageToBuffer2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pCopyImageToBufferInfo = pCopyImageToBufferInfo;
+    unix_funcs->p_vk_call(unix_vkCmdCopyImageToBuffer2, &params);
+}
+
 void WINAPI vkCmdCopyImageToBuffer2KHR(VkCommandBuffer commandBuffer, const VkCopyImageToBufferInfo2 *pCopyImageToBufferInfo)
 {
     struct vkCmdCopyImageToBuffer2KHR_params params;
@@ -891,6 +952,13 @@ void WINAPI vkCmdEndRenderPass2KHR(VkCommandBuffer commandBuffer, const VkSubpas
     unix_funcs->p_vk_call(unix_vkCmdEndRenderPass2KHR, &params);
 }
 
+void WINAPI vkCmdEndRendering(VkCommandBuffer commandBuffer)
+{
+    struct vkCmdEndRendering_params params;
+    params.commandBuffer = commandBuffer;
+    unix_funcs->p_vk_call(unix_vkCmdEndRendering, &params);
+}
+
 void WINAPI vkCmdEndRenderingKHR(VkCommandBuffer commandBuffer)
 {
     struct vkCmdEndRenderingKHR_params params;
@@ -988,6 +1056,14 @@ void WINAPI vkCmdPipelineBarrier(VkCommandBuffer commandBuffer, VkPipelineStageF
     unix_funcs->p_vk_call(unix_vkCmdPipelineBarrier, &params);
 }
 
+void WINAPI vkCmdPipelineBarrier2(VkCommandBuffer commandBuffer, const VkDependencyInfo *pDependencyInfo)
+{
+    struct vkCmdPipelineBarrier2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pDependencyInfo = pDependencyInfo;
+    unix_funcs->p_vk_call(unix_vkCmdPipelineBarrier2, &params);
+}
+
 void WINAPI vkCmdPipelineBarrier2KHR(VkCommandBuffer commandBuffer, const VkDependencyInfo *pDependencyInfo)
 {
     struct vkCmdPipelineBarrier2KHR_params params;
@@ -1048,6 +1124,15 @@ void WINAPI vkCmdResetEvent(VkCommandBuffer commandBuffer, VkEvent event, VkPipe
     unix_funcs->p_vk_call(unix_vkCmdResetEvent, &params);
 }
 
+void WINAPI vkCmdResetEvent2(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags2 stageMask)
+{
+    struct vkCmdResetEvent2_params params;
+    params.commandBuffer = commandBuffer;
+    params.event = event;
+    params.stageMask = stageMask;
+    unix_funcs->p_vk_call(unix_vkCmdResetEvent2, &params);
+}
+
 void WINAPI vkCmdResetEvent2KHR(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags2 stageMask)
 {
     struct vkCmdResetEvent2KHR_params params;
@@ -1080,6 +1165,14 @@ void WINAPI vkCmdResolveImage(VkCommandBuffer commandBuffer, VkImage srcImage, V
     unix_funcs->p_vk_call(unix_vkCmdResolveImage, &params);
 }
 
+void WINAPI vkCmdResolveImage2(VkCommandBuffer commandBuffer, const VkResolveImageInfo2 *pResolveImageInfo)
+{
+    struct vkCmdResolveImage2_params params;
+    params.commandBuffer = commandBuffer;
+    params.pResolveImageInfo = pResolveImageInfo;
+    unix_funcs->p_vk_call(unix_vkCmdResolveImage2, &params);
+}
+
 void WINAPI vkCmdResolveImage2KHR(VkCommandBuffer commandBuffer, const VkResolveImageInfo2 *pResolveImageInfo)
 {
     struct vkCmdResolveImage2KHR_params params;
@@ -1123,6 +1216,14 @@ void WINAPI vkCmdSetColorWriteEnableEXT(VkCommandBuffer commandBuffer, uint32_t
     unix_funcs->p_vk_call(unix_vkCmdSetColorWriteEnableEXT, &params);
 }
 
+void WINAPI vkCmdSetCullMode(VkCommandBuffer commandBuffer, VkCullModeFlags cullMode)
+{
+    struct vkCmdSetCullMode_params params;
+    params.commandBuffer = commandBuffer;
+    params.cullMode = cullMode;
+    unix_funcs->p_vk_call(unix_vkCmdSetCullMode, &params);
+}
+
 void WINAPI vkCmdSetCullModeEXT(VkCommandBuffer commandBuffer, VkCullModeFlags cullMode)
 {
     struct vkCmdSetCullModeEXT_params params;
@@ -1141,6 +1242,14 @@ void WINAPI vkCmdSetDepthBias(VkCommandBuffer commandBuffer, float depthBiasCons
     unix_funcs->p_vk_call(unix_vkCmdSetDepthBias, &params);
 }
 
+void WINAPI vkCmdSetDepthBiasEnable(VkCommandBuffer commandBuffer, VkBool32 depthBiasEnable)
+{
+    struct vkCmdSetDepthBiasEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.depthBiasEnable = depthBiasEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetDepthBiasEnable, &params);
+}
+
 void WINAPI vkCmdSetDepthBiasEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthBiasEnable)
 {
     struct vkCmdSetDepthBiasEnableEXT_params params;
@@ -1158,6 +1267,14 @@ void WINAPI vkCmdSetDepthBounds(VkCommandBuffer commandBuffer, float minDepthBou
     unix_funcs->p_vk_call(unix_vkCmdSetDepthBounds, &params);
 }
 
+void WINAPI vkCmdSetDepthBoundsTestEnable(VkCommandBuffer commandBuffer, VkBool32 depthBoundsTestEnable)
+{
+    struct vkCmdSetDepthBoundsTestEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.depthBoundsTestEnable = depthBoundsTestEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetDepthBoundsTestEnable, &params);
+}
+
 void WINAPI vkCmdSetDepthBoundsTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthBoundsTestEnable)
 {
     struct vkCmdSetDepthBoundsTestEnableEXT_params params;
@@ -1166,6 +1283,14 @@ void WINAPI vkCmdSetDepthBoundsTestEnableEXT(VkCommandBuffer commandBuffer, VkBo
     unix_funcs->p_vk_call(unix_vkCmdSetDepthBoundsTestEnableEXT, &params);
 }
 
+void WINAPI vkCmdSetDepthCompareOp(VkCommandBuffer commandBuffer, VkCompareOp depthCompareOp)
+{
+    struct vkCmdSetDepthCompareOp_params params;
+    params.commandBuffer = commandBuffer;
+    params.depthCompareOp = depthCompareOp;
+    unix_funcs->p_vk_call(unix_vkCmdSetDepthCompareOp, &params);
+}
+
 void WINAPI vkCmdSetDepthCompareOpEXT(VkCommandBuffer commandBuffer, VkCompareOp depthCompareOp)
 {
     struct vkCmdSetDepthCompareOpEXT_params params;
@@ -1174,6 +1299,14 @@ void WINAPI vkCmdSetDepthCompareOpEXT(VkCommandBuffer commandBuffer, VkCompareOp
     unix_funcs->p_vk_call(unix_vkCmdSetDepthCompareOpEXT, &params);
 }
 
+void WINAPI vkCmdSetDepthTestEnable(VkCommandBuffer commandBuffer, VkBool32 depthTestEnable)
+{
+    struct vkCmdSetDepthTestEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.depthTestEnable = depthTestEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetDepthTestEnable, &params);
+}
+
 void WINAPI vkCmdSetDepthTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthTestEnable)
 {
     struct vkCmdSetDepthTestEnableEXT_params params;
@@ -1182,6 +1315,14 @@ void WINAPI vkCmdSetDepthTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 d
     unix_funcs->p_vk_call(unix_vkCmdSetDepthTestEnableEXT, &params);
 }
 
+void WINAPI vkCmdSetDepthWriteEnable(VkCommandBuffer commandBuffer, VkBool32 depthWriteEnable)
+{
+    struct vkCmdSetDepthWriteEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.depthWriteEnable = depthWriteEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetDepthWriteEnable, &params);
+}
+
 void WINAPI vkCmdSetDepthWriteEnableEXT(VkCommandBuffer commandBuffer, VkBool32 depthWriteEnable)
 {
     struct vkCmdSetDepthWriteEnableEXT_params params;
@@ -1225,6 +1366,15 @@ void WINAPI vkCmdSetEvent(VkCommandBuffer commandBuffer, VkEvent event, VkPipeli
     unix_funcs->p_vk_call(unix_vkCmdSetEvent, &params);
 }
 
+void WINAPI vkCmdSetEvent2(VkCommandBuffer commandBuffer, VkEvent event, const VkDependencyInfo *pDependencyInfo)
+{
+    struct vkCmdSetEvent2_params params;
+    params.commandBuffer = commandBuffer;
+    params.event = event;
+    params.pDependencyInfo = pDependencyInfo;
+    unix_funcs->p_vk_call(unix_vkCmdSetEvent2, &params);
+}
+
 void WINAPI vkCmdSetEvent2KHR(VkCommandBuffer commandBuffer, VkEvent event, const VkDependencyInfo *pDependencyInfo)
 {
     struct vkCmdSetEvent2KHR_params params;
@@ -1262,6 +1412,14 @@ void WINAPI vkCmdSetFragmentShadingRateKHR(VkCommandBuffer commandBuffer, const
     unix_funcs->p_vk_call(unix_vkCmdSetFragmentShadingRateKHR, &params);
 }
 
+void WINAPI vkCmdSetFrontFace(VkCommandBuffer commandBuffer, VkFrontFace frontFace)
+{
+    struct vkCmdSetFrontFace_params params;
+    params.commandBuffer = commandBuffer;
+    params.frontFace = frontFace;
+    unix_funcs->p_vk_call(unix_vkCmdSetFrontFace, &params);
+}
+
 void WINAPI vkCmdSetFrontFaceEXT(VkCommandBuffer commandBuffer, VkFrontFace frontFace)
 {
     struct vkCmdSetFrontFaceEXT_params params;
@@ -1327,6 +1485,14 @@ VkResult WINAPI vkCmdSetPerformanceStreamMarkerINTEL(VkCommandBuffer commandBuff
     return unix_funcs->p_vk_call(unix_vkCmdSetPerformanceStreamMarkerINTEL, &params);
 }
 
+void WINAPI vkCmdSetPrimitiveRestartEnable(VkCommandBuffer commandBuffer, VkBool32 primitiveRestartEnable)
+{
+    struct vkCmdSetPrimitiveRestartEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.primitiveRestartEnable = primitiveRestartEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetPrimitiveRestartEnable, &params);
+}
+
 void WINAPI vkCmdSetPrimitiveRestartEnableEXT(VkCommandBuffer commandBuffer, VkBool32 primitiveRestartEnable)
 {
     struct vkCmdSetPrimitiveRestartEnableEXT_params params;
@@ -1335,6 +1501,14 @@ void WINAPI vkCmdSetPrimitiveRestartEnableEXT(VkCommandBuffer commandBuffer, VkB
     unix_funcs->p_vk_call(unix_vkCmdSetPrimitiveRestartEnableEXT, &params);
 }
 
+void WINAPI vkCmdSetPrimitiveTopology(VkCommandBuffer commandBuffer, VkPrimitiveTopology primitiveTopology)
+{
+    struct vkCmdSetPrimitiveTopology_params params;
+    params.commandBuffer = commandBuffer;
+    params.primitiveTopology = primitiveTopology;
+    unix_funcs->p_vk_call(unix_vkCmdSetPrimitiveTopology, &params);
+}
+
 void WINAPI vkCmdSetPrimitiveTopologyEXT(VkCommandBuffer commandBuffer, VkPrimitiveTopology primitiveTopology)
 {
     struct vkCmdSetPrimitiveTopologyEXT_params params;
@@ -1343,6 +1517,14 @@ void WINAPI vkCmdSetPrimitiveTopologyEXT(VkCommandBuffer commandBuffer, VkPrimit
     unix_funcs->p_vk_call(unix_vkCmdSetPrimitiveTopologyEXT, &params);
 }
 
+void WINAPI vkCmdSetRasterizerDiscardEnable(VkCommandBuffer commandBuffer, VkBool32 rasterizerDiscardEnable)
+{
+    struct vkCmdSetRasterizerDiscardEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.rasterizerDiscardEnable = rasterizerDiscardEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetRasterizerDiscardEnable, &params);
+}
+
 void WINAPI vkCmdSetRasterizerDiscardEnableEXT(VkCommandBuffer commandBuffer, VkBool32 rasterizerDiscardEnable)
 {
     struct vkCmdSetRasterizerDiscardEnableEXT_params params;
@@ -1377,6 +1559,15 @@ void WINAPI vkCmdSetScissor(VkCommandBuffer commandBuffer, uint32_t firstScissor
     unix_funcs->p_vk_call(unix_vkCmdSetScissor, &params);
 }
 
+void WINAPI vkCmdSetScissorWithCount(VkCommandBuffer commandBuffer, uint32_t scissorCount, const VkRect2D *pScissors)
+{
+    struct vkCmdSetScissorWithCount_params params;
+    params.commandBuffer = commandBuffer;
+    params.scissorCount = scissorCount;
+    params.pScissors = pScissors;
+    unix_funcs->p_vk_call(unix_vkCmdSetScissorWithCount, &params);
+}
+
 void WINAPI vkCmdSetScissorWithCountEXT(VkCommandBuffer commandBuffer, uint32_t scissorCount, const VkRect2D *pScissors)
 {
     struct vkCmdSetScissorWithCountEXT_params params;
@@ -1395,6 +1586,18 @@ void WINAPI vkCmdSetStencilCompareMask(VkCommandBuffer commandBuffer, VkStencilF
     unix_funcs->p_vk_call(unix_vkCmdSetStencilCompareMask, &params);
 }
 
+void WINAPI vkCmdSetStencilOp(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, VkStencilOp failOp, VkStencilOp passOp, VkStencilOp depthFailOp, VkCompareOp compareOp)
+{
+    struct vkCmdSetStencilOp_params params;
+    params.commandBuffer = commandBuffer;
+    params.faceMask = faceMask;
+    params.failOp = failOp;
+    params.passOp = passOp;
+    params.depthFailOp = depthFailOp;
+    params.compareOp = compareOp;
+    unix_funcs->p_vk_call(unix_vkCmdSetStencilOp, &params);
+}
+
 void WINAPI vkCmdSetStencilOpEXT(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, VkStencilOp failOp, VkStencilOp passOp, VkStencilOp depthFailOp, VkCompareOp compareOp)
 {
     struct vkCmdSetStencilOpEXT_params params;
@@ -1416,6 +1619,14 @@ void WINAPI vkCmdSetStencilReference(VkCommandBuffer commandBuffer, VkStencilFac
     unix_funcs->p_vk_call(unix_vkCmdSetStencilReference, &params);
 }
 
+void WINAPI vkCmdSetStencilTestEnable(VkCommandBuffer commandBuffer, VkBool32 stencilTestEnable)
+{
+    struct vkCmdSetStencilTestEnable_params params;
+    params.commandBuffer = commandBuffer;
+    params.stencilTestEnable = stencilTestEnable;
+    unix_funcs->p_vk_call(unix_vkCmdSetStencilTestEnable, &params);
+}
+
 void WINAPI vkCmdSetStencilTestEnableEXT(VkCommandBuffer commandBuffer, VkBool32 stencilTestEnable)
 {
     struct vkCmdSetStencilTestEnableEXT_params params;
@@ -1474,6 +1685,15 @@ void WINAPI vkCmdSetViewportWScalingNV(VkCommandBuffer commandBuffer, uint32_t f
     unix_funcs->p_vk_call(unix_vkCmdSetViewportWScalingNV, &params);
 }
 
+void WINAPI vkCmdSetViewportWithCount(VkCommandBuffer commandBuffer, uint32_t viewportCount, const VkViewport *pViewports)
+{
+    struct vkCmdSetViewportWithCount_params params;
+    params.commandBuffer = commandBuffer;
+    params.viewportCount = viewportCount;
+    params.pViewports = pViewports;
+    unix_funcs->p_vk_call(unix_vkCmdSetViewportWithCount, &params);
+}
+
 void WINAPI vkCmdSetViewportWithCountEXT(VkCommandBuffer commandBuffer, uint32_t viewportCount, const VkViewport *pViewports)
 {
     struct vkCmdSetViewportWithCountEXT_params params;
@@ -1565,6 +1785,16 @@ void WINAPI vkCmdWaitEvents(VkCommandBuffer commandBuffer, uint32_t eventCount,
     unix_funcs->p_vk_call(unix_vkCmdWaitEvents, &params);
 }
 
+void WINAPI vkCmdWaitEvents2(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent *pEvents, const VkDependencyInfo *pDependencyInfos)
+{
+    struct vkCmdWaitEvents2_params params;
+    params.commandBuffer = commandBuffer;
+    params.eventCount = eventCount;
+    params.pEvents = pEvents;
+    params.pDependencyInfos = pDependencyInfos;
+    unix_funcs->p_vk_call(unix_vkCmdWaitEvents2, &params);
+}
+
 void WINAPI vkCmdWaitEvents2KHR(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent *pEvents, const VkDependencyInfo *pDependencyInfos)
 {
     struct vkCmdWaitEvents2KHR_params params;
@@ -1631,6 +1861,16 @@ void WINAPI vkCmdWriteTimestamp(VkCommandBuffer commandBuffer, VkPipelineStageFl
     unix_funcs->p_vk_call(unix_vkCmdWriteTimestamp, &params);
 }
 
+void WINAPI vkCmdWriteTimestamp2(VkCommandBuffer commandBuffer, VkPipelineStageFlags2 stage, VkQueryPool queryPool, uint32_t query)
+{
+    struct vkCmdWriteTimestamp2_params params;
+    params.commandBuffer = commandBuffer;
+    params.stage = stage;
+    params.queryPool = queryPool;
+    params.query = query;
+    unix_funcs->p_vk_call(unix_vkCmdWriteTimestamp2, &params);
+}
+
 void WINAPI vkCmdWriteTimestamp2KHR(VkCommandBuffer commandBuffer, VkPipelineStageFlags2 stage, VkQueryPool queryPool, uint32_t query)
 {
     struct vkCmdWriteTimestamp2KHR_params params;
@@ -1930,6 +2170,16 @@ VkResult WINAPI vkCreatePipelineLayout(VkDevice device, const VkPipelineLayoutCr
     return vk_unix_call(unix_vkCreatePipelineLayout, &params);
 }
 
+VkResult WINAPI vkCreatePrivateDataSlot(VkDevice device, const VkPrivateDataSlotCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkPrivateDataSlot *pPrivateDataSlot)
+{
+    struct vkCreatePrivateDataSlot_params params;
+    params.device = device;
+    params.pCreateInfo = pCreateInfo;
+    params.pAllocator = pAllocator;
+    params.pPrivateDataSlot = pPrivateDataSlot;
+    return vk_unix_call(unix_vkCreatePrivateDataSlot, &params);
+}
+
 VkResult WINAPI vkCreatePrivateDataSlotEXT(VkDevice device, const VkPrivateDataSlotCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkPrivateDataSlot *pPrivateDataSlot)
 {
     struct vkCreatePrivateDataSlotEXT_params params;
@@ -2346,6 +2596,15 @@ void WINAPI vkDestroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLa
     vk_unix_call(unix_vkDestroyPipelineLayout, &params);
 }
 
+void WINAPI vkDestroyPrivateDataSlot(VkDevice device, VkPrivateDataSlot privateDataSlot, const VkAllocationCallbacks *pAllocator)
+{
+    struct vkDestroyPrivateDataSlot_params params;
+    params.device = device;
+    params.privateDataSlot = privateDataSlot;
+    params.pAllocator = pAllocator;
+    vk_unix_call(unix_vkDestroyPrivateDataSlot, &params);
+}
+
 void WINAPI vkDestroyPrivateDataSlotEXT(VkDevice device, VkPrivateDataSlot privateDataSlot, const VkAllocationCallbacks *pAllocator)
 {
     struct vkDestroyPrivateDataSlotEXT_params params;
@@ -2719,6 +2978,15 @@ void WINAPI vkGetDeviceAccelerationStructureCompatibilityKHR(VkDevice device, co
     vk_unix_call(unix_vkGetDeviceAccelerationStructureCompatibilityKHR, &params);
 }
 
+void WINAPI vkGetDeviceBufferMemoryRequirements(VkDevice device, const VkDeviceBufferMemoryRequirements *pInfo, VkMemoryRequirements2 *pMemoryRequirements)
+{
+    struct vkGetDeviceBufferMemoryRequirements_params params;
+    params.device = device;
+    params.pInfo = pInfo;
+    params.pMemoryRequirements = pMemoryRequirements;
+    vk_unix_call(unix_vkGetDeviceBufferMemoryRequirements, &params);
+}
+
 void WINAPI vkGetDeviceBufferMemoryRequirementsKHR(VkDevice device, const VkDeviceBufferMemoryRequirements *pInfo, VkMemoryRequirements2 *pMemoryRequirements)
 {
     struct vkGetDeviceBufferMemoryRequirementsKHR_params params;
@@ -2767,6 +3035,15 @@ VkResult WINAPI vkGetDeviceGroupSurfacePresentModesKHR(VkDevice device, VkSurfac
     return unix_funcs->p_vk_call(unix_vkGetDeviceGroupSurfacePresentModesKHR, &params);
 }
 
+void WINAPI vkGetDeviceImageMemoryRequirements(VkDevice device, const VkDeviceImageMemoryRequirements *pInfo, VkMemoryRequirements2 *pMemoryRequirements)
+{
+    struct vkGetDeviceImageMemoryRequirements_params params;
+    params.device = device;
+    params.pInfo = pInfo;
+    params.pMemoryRequirements = pMemoryRequirements;
+    vk_unix_call(unix_vkGetDeviceImageMemoryRequirements, &params);
+}
+
 void WINAPI vkGetDeviceImageMemoryRequirementsKHR(VkDevice device, const VkDeviceImageMemoryRequirements *pInfo, VkMemoryRequirements2 *pMemoryRequirements)
 {
     struct vkGetDeviceImageMemoryRequirementsKHR_params params;
@@ -2776,6 +3053,16 @@ void WINAPI vkGetDeviceImageMemoryRequirementsKHR(VkDevice device, const VkDevic
     vk_unix_call(unix_vkGetDeviceImageMemoryRequirementsKHR, &params);
 }
 
+void WINAPI vkGetDeviceImageSparseMemoryRequirements(VkDevice device, const VkDeviceImageMemoryRequirements *pInfo, uint32_t *pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 *pSparseMemoryRequirements)
+{
+    struct vkGetDeviceImageSparseMemoryRequirements_params params;
+    params.device = device;
+    params.pInfo = pInfo;
+    params.pSparseMemoryRequirementCount = pSparseMemoryRequirementCount;
+    params.pSparseMemoryRequirements = pSparseMemoryRequirements;
+    vk_unix_call(unix_vkGetDeviceImageSparseMemoryRequirements, &params);
+}
+
 void WINAPI vkGetDeviceImageSparseMemoryRequirementsKHR(VkDevice device, const VkDeviceImageMemoryRequirements *pInfo, uint32_t *pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2 *pSparseMemoryRequirements)
 {
     struct vkGetDeviceImageSparseMemoryRequirementsKHR_params params;
@@ -3320,6 +3607,15 @@ VkResult WINAPI vkGetPhysicalDeviceSurfaceSupportKHR(VkPhysicalDevice physicalDe
     return unix_funcs->p_vk_call(unix_vkGetPhysicalDeviceSurfaceSupportKHR, &params);
 }
 
+VkResult WINAPI vkGetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, uint32_t *pToolCount, VkPhysicalDeviceToolProperties *pToolProperties)
+{
+    struct vkGetPhysicalDeviceToolProperties_params params;
+    params.physicalDevice = physicalDevice;
+    params.pToolCount = pToolCount;
+    params.pToolProperties = pToolProperties;
+    return vk_unix_call(unix_vkGetPhysicalDeviceToolProperties, &params);
+}
+
 VkResult WINAPI vkGetPhysicalDeviceToolPropertiesEXT(VkPhysicalDevice physicalDevice, uint32_t *pToolCount, VkPhysicalDeviceToolProperties *pToolProperties)
 {
     struct vkGetPhysicalDeviceToolPropertiesEXT_params params;
@@ -3377,6 +3673,17 @@ VkResult WINAPI vkGetPipelineExecutableStatisticsKHR(VkDevice device, const VkPi
     return vk_unix_call(unix_vkGetPipelineExecutableStatisticsKHR, &params);
 }
 
+void WINAPI vkGetPrivateData(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t *pData)
+{
+    struct vkGetPrivateData_params params;
+    params.device = device;
+    params.objectType = objectType;
+    params.objectHandle = objectHandle;
+    params.privateDataSlot = privateDataSlot;
+    params.pData = pData;
+    vk_unix_call(unix_vkGetPrivateData, &params);
+}
+
 void WINAPI vkGetPrivateDataEXT(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t *pData)
 {
     struct vkGetPrivateDataEXT_params params;
@@ -3633,6 +3940,16 @@ VkResult WINAPI vkQueueSubmit(VkQueue queue, uint32_t submitCount, const VkSubmi
     return vk_unix_call(unix_vkQueueSubmit, &params);
 }
 
+VkResult WINAPI vkQueueSubmit2(VkQueue queue, uint32_t submitCount, const VkSubmitInfo2 *pSubmits, VkFence fence)
+{
+    struct vkQueueSubmit2_params params;
+    params.queue = queue;
+    params.submitCount = submitCount;
+    params.pSubmits = pSubmits;
+    params.fence = fence;
+    return vk_unix_call(unix_vkQueueSubmit2, &params);
+}
+
 VkResult WINAPI vkQueueSubmit2KHR(VkQueue queue, uint32_t submitCount, const VkSubmitInfo2 *pSubmits, VkFence fence)
 {
     struct vkQueueSubmit2KHR_params params;
@@ -3761,6 +4078,17 @@ VkResult WINAPI vkSetEvent(VkDevice device, VkEvent event)
     return vk_unix_call(unix_vkSetEvent, &params);
 }
 
+VkResult WINAPI vkSetPrivateData(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t data)
+{
+    struct vkSetPrivateData_params params;
+    params.device = device;
+    params.objectType = objectType;
+    params.objectHandle = objectHandle;
+    params.privateDataSlot = privateDataSlot;
+    params.data = data;
+    return vk_unix_call(unix_vkSetPrivateData, &params);
+}
+
 VkResult WINAPI vkSetPrivateDataEXT(VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t data)
 {
     struct vkSetPrivateDataEXT_params params;
@@ -3939,6 +4267,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdBeginRenderPass", vkCmdBeginRenderPass},
     {"vkCmdBeginRenderPass2", vkCmdBeginRenderPass2},
     {"vkCmdBeginRenderPass2KHR", vkCmdBeginRenderPass2KHR},
+    {"vkCmdBeginRendering", vkCmdBeginRendering},
     {"vkCmdBeginRenderingKHR", vkCmdBeginRenderingKHR},
     {"vkCmdBeginTransformFeedbackEXT", vkCmdBeginTransformFeedbackEXT},
     {"vkCmdBindDescriptorSets", vkCmdBindDescriptorSets},
@@ -3949,8 +4278,10 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdBindShadingRateImageNV", vkCmdBindShadingRateImageNV},
     {"vkCmdBindTransformFeedbackBuffersEXT", vkCmdBindTransformFeedbackBuffersEXT},
     {"vkCmdBindVertexBuffers", vkCmdBindVertexBuffers},
+    {"vkCmdBindVertexBuffers2", vkCmdBindVertexBuffers2},
     {"vkCmdBindVertexBuffers2EXT", vkCmdBindVertexBuffers2EXT},
     {"vkCmdBlitImage", vkCmdBlitImage},
+    {"vkCmdBlitImage2", vkCmdBlitImage2},
     {"vkCmdBlitImage2KHR", vkCmdBlitImage2KHR},
     {"vkCmdBuildAccelerationStructureNV", vkCmdBuildAccelerationStructureNV},
     {"vkCmdBuildAccelerationStructuresIndirectKHR", vkCmdBuildAccelerationStructuresIndirectKHR},
@@ -3962,12 +4293,16 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdCopyAccelerationStructureNV", vkCmdCopyAccelerationStructureNV},
     {"vkCmdCopyAccelerationStructureToMemoryKHR", vkCmdCopyAccelerationStructureToMemoryKHR},
     {"vkCmdCopyBuffer", vkCmdCopyBuffer},
+    {"vkCmdCopyBuffer2", vkCmdCopyBuffer2},
     {"vkCmdCopyBuffer2KHR", vkCmdCopyBuffer2KHR},
     {"vkCmdCopyBufferToImage", vkCmdCopyBufferToImage},
+    {"vkCmdCopyBufferToImage2", vkCmdCopyBufferToImage2},
     {"vkCmdCopyBufferToImage2KHR", vkCmdCopyBufferToImage2KHR},
     {"vkCmdCopyImage", vkCmdCopyImage},
+    {"vkCmdCopyImage2", vkCmdCopyImage2},
     {"vkCmdCopyImage2KHR", vkCmdCopyImage2KHR},
     {"vkCmdCopyImageToBuffer", vkCmdCopyImageToBuffer},
+    {"vkCmdCopyImageToBuffer2", vkCmdCopyImageToBuffer2},
     {"vkCmdCopyImageToBuffer2KHR", vkCmdCopyImageToBuffer2KHR},
     {"vkCmdCopyMemoryToAccelerationStructureKHR", vkCmdCopyMemoryToAccelerationStructureKHR},
     {"vkCmdCopyQueryPoolResults", vkCmdCopyQueryPoolResults},
@@ -4002,6 +4337,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdEndRenderPass", vkCmdEndRenderPass},
     {"vkCmdEndRenderPass2", vkCmdEndRenderPass2},
     {"vkCmdEndRenderPass2KHR", vkCmdEndRenderPass2KHR},
+    {"vkCmdEndRendering", vkCmdEndRendering},
     {"vkCmdEndRenderingKHR", vkCmdEndRenderingKHR},
     {"vkCmdEndTransformFeedbackEXT", vkCmdEndTransformFeedbackEXT},
     {"vkCmdExecuteCommands", vkCmdExecuteCommands},
@@ -4012,36 +4348,47 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdNextSubpass2", vkCmdNextSubpass2},
     {"vkCmdNextSubpass2KHR", vkCmdNextSubpass2KHR},
     {"vkCmdPipelineBarrier", vkCmdPipelineBarrier},
+    {"vkCmdPipelineBarrier2", vkCmdPipelineBarrier2},
     {"vkCmdPipelineBarrier2KHR", vkCmdPipelineBarrier2KHR},
     {"vkCmdPreprocessGeneratedCommandsNV", vkCmdPreprocessGeneratedCommandsNV},
     {"vkCmdPushConstants", vkCmdPushConstants},
     {"vkCmdPushDescriptorSetKHR", vkCmdPushDescriptorSetKHR},
     {"vkCmdPushDescriptorSetWithTemplateKHR", vkCmdPushDescriptorSetWithTemplateKHR},
     {"vkCmdResetEvent", vkCmdResetEvent},
+    {"vkCmdResetEvent2", vkCmdResetEvent2},
     {"vkCmdResetEvent2KHR", vkCmdResetEvent2KHR},
     {"vkCmdResetQueryPool", vkCmdResetQueryPool},
     {"vkCmdResolveImage", vkCmdResolveImage},
+    {"vkCmdResolveImage2", vkCmdResolveImage2},
     {"vkCmdResolveImage2KHR", vkCmdResolveImage2KHR},
     {"vkCmdSetBlendConstants", vkCmdSetBlendConstants},
     {"vkCmdSetCheckpointNV", vkCmdSetCheckpointNV},
     {"vkCmdSetCoarseSampleOrderNV", vkCmdSetCoarseSampleOrderNV},
     {"vkCmdSetColorWriteEnableEXT", vkCmdSetColorWriteEnableEXT},
+    {"vkCmdSetCullMode", vkCmdSetCullMode},
     {"vkCmdSetCullModeEXT", vkCmdSetCullModeEXT},
     {"vkCmdSetDepthBias", vkCmdSetDepthBias},
+    {"vkCmdSetDepthBiasEnable", vkCmdSetDepthBiasEnable},
     {"vkCmdSetDepthBiasEnableEXT", vkCmdSetDepthBiasEnableEXT},
     {"vkCmdSetDepthBounds", vkCmdSetDepthBounds},
+    {"vkCmdSetDepthBoundsTestEnable", vkCmdSetDepthBoundsTestEnable},
     {"vkCmdSetDepthBoundsTestEnableEXT", vkCmdSetDepthBoundsTestEnableEXT},
+    {"vkCmdSetDepthCompareOp", vkCmdSetDepthCompareOp},
     {"vkCmdSetDepthCompareOpEXT", vkCmdSetDepthCompareOpEXT},
+    {"vkCmdSetDepthTestEnable", vkCmdSetDepthTestEnable},
     {"vkCmdSetDepthTestEnableEXT", vkCmdSetDepthTestEnableEXT},
+    {"vkCmdSetDepthWriteEnable", vkCmdSetDepthWriteEnable},
     {"vkCmdSetDepthWriteEnableEXT", vkCmdSetDepthWriteEnableEXT},
     {"vkCmdSetDeviceMask", vkCmdSetDeviceMask},
     {"vkCmdSetDeviceMaskKHR", vkCmdSetDeviceMaskKHR},
     {"vkCmdSetDiscardRectangleEXT", vkCmdSetDiscardRectangleEXT},
     {"vkCmdSetEvent", vkCmdSetEvent},
+    {"vkCmdSetEvent2", vkCmdSetEvent2},
     {"vkCmdSetEvent2KHR", vkCmdSetEvent2KHR},
     {"vkCmdSetExclusiveScissorNV", vkCmdSetExclusiveScissorNV},
     {"vkCmdSetFragmentShadingRateEnumNV", vkCmdSetFragmentShadingRateEnumNV},
     {"vkCmdSetFragmentShadingRateKHR", vkCmdSetFragmentShadingRateKHR},
+    {"vkCmdSetFrontFace", vkCmdSetFrontFace},
     {"vkCmdSetFrontFaceEXT", vkCmdSetFrontFaceEXT},
     {"vkCmdSetLineStippleEXT", vkCmdSetLineStippleEXT},
     {"vkCmdSetLineWidth", vkCmdSetLineWidth},
@@ -4050,22 +4397,29 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdSetPerformanceMarkerINTEL", vkCmdSetPerformanceMarkerINTEL},
     {"vkCmdSetPerformanceOverrideINTEL", vkCmdSetPerformanceOverrideINTEL},
     {"vkCmdSetPerformanceStreamMarkerINTEL", vkCmdSetPerformanceStreamMarkerINTEL},
+    {"vkCmdSetPrimitiveRestartEnable", vkCmdSetPrimitiveRestartEnable},
     {"vkCmdSetPrimitiveRestartEnableEXT", vkCmdSetPrimitiveRestartEnableEXT},
+    {"vkCmdSetPrimitiveTopology", vkCmdSetPrimitiveTopology},
     {"vkCmdSetPrimitiveTopologyEXT", vkCmdSetPrimitiveTopologyEXT},
+    {"vkCmdSetRasterizerDiscardEnable", vkCmdSetRasterizerDiscardEnable},
     {"vkCmdSetRasterizerDiscardEnableEXT", vkCmdSetRasterizerDiscardEnableEXT},
     {"vkCmdSetRayTracingPipelineStackSizeKHR", vkCmdSetRayTracingPipelineStackSizeKHR},
     {"vkCmdSetSampleLocationsEXT", vkCmdSetSampleLocationsEXT},
     {"vkCmdSetScissor", vkCmdSetScissor},
+    {"vkCmdSetScissorWithCount", vkCmdSetScissorWithCount},
     {"vkCmdSetScissorWithCountEXT", vkCmdSetScissorWithCountEXT},
     {"vkCmdSetStencilCompareMask", vkCmdSetStencilCompareMask},
+    {"vkCmdSetStencilOp", vkCmdSetStencilOp},
     {"vkCmdSetStencilOpEXT", vkCmdSetStencilOpEXT},
     {"vkCmdSetStencilReference", vkCmdSetStencilReference},
+    {"vkCmdSetStencilTestEnable", vkCmdSetStencilTestEnable},
     {"vkCmdSetStencilTestEnableEXT", vkCmdSetStencilTestEnableEXT},
     {"vkCmdSetStencilWriteMask", vkCmdSetStencilWriteMask},
     {"vkCmdSetVertexInputEXT", vkCmdSetVertexInputEXT},
     {"vkCmdSetViewport", vkCmdSetViewport},
     {"vkCmdSetViewportShadingRatePaletteNV", vkCmdSetViewportShadingRatePaletteNV},
     {"vkCmdSetViewportWScalingNV", vkCmdSetViewportWScalingNV},
+    {"vkCmdSetViewportWithCount", vkCmdSetViewportWithCount},
     {"vkCmdSetViewportWithCountEXT", vkCmdSetViewportWithCountEXT},
     {"vkCmdSubpassShadingHUAWEI", vkCmdSubpassShadingHUAWEI},
     {"vkCmdTraceRaysIndirectKHR", vkCmdTraceRaysIndirectKHR},
@@ -4073,12 +4427,14 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCmdTraceRaysNV", vkCmdTraceRaysNV},
     {"vkCmdUpdateBuffer", vkCmdUpdateBuffer},
     {"vkCmdWaitEvents", vkCmdWaitEvents},
+    {"vkCmdWaitEvents2", vkCmdWaitEvents2},
     {"vkCmdWaitEvents2KHR", vkCmdWaitEvents2KHR},
     {"vkCmdWriteAccelerationStructuresPropertiesKHR", vkCmdWriteAccelerationStructuresPropertiesKHR},
     {"vkCmdWriteAccelerationStructuresPropertiesNV", vkCmdWriteAccelerationStructuresPropertiesNV},
     {"vkCmdWriteBufferMarker2AMD", vkCmdWriteBufferMarker2AMD},
     {"vkCmdWriteBufferMarkerAMD", vkCmdWriteBufferMarkerAMD},
     {"vkCmdWriteTimestamp", vkCmdWriteTimestamp},
+    {"vkCmdWriteTimestamp2", vkCmdWriteTimestamp2},
     {"vkCmdWriteTimestamp2KHR", vkCmdWriteTimestamp2KHR},
     {"vkCompileDeferredNV", vkCompileDeferredNV},
     {"vkCopyAccelerationStructureKHR", vkCopyAccelerationStructureKHR},
@@ -4106,6 +4462,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkCreateIndirectCommandsLayoutNV", vkCreateIndirectCommandsLayoutNV},
     {"vkCreatePipelineCache", vkCreatePipelineCache},
     {"vkCreatePipelineLayout", vkCreatePipelineLayout},
+    {"vkCreatePrivateDataSlot", vkCreatePrivateDataSlot},
     {"vkCreatePrivateDataSlotEXT", vkCreatePrivateDataSlotEXT},
     {"vkCreateQueryPool", vkCreateQueryPool},
     {"vkCreateRayTracingPipelinesKHR", vkCreateRayTracingPipelinesKHR},
@@ -4145,6 +4502,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkDestroyPipeline", vkDestroyPipeline},
     {"vkDestroyPipelineCache", vkDestroyPipelineCache},
     {"vkDestroyPipelineLayout", vkDestroyPipelineLayout},
+    {"vkDestroyPrivateDataSlot", vkDestroyPrivateDataSlot},
     {"vkDestroyPrivateDataSlotEXT", vkDestroyPrivateDataSlotEXT},
     {"vkDestroyQueryPool", vkDestroyQueryPool},
     {"vkDestroyRenderPass", vkDestroyRenderPass},
@@ -4179,12 +4537,15 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkGetDescriptorSetLayoutSupport", vkGetDescriptorSetLayoutSupport},
     {"vkGetDescriptorSetLayoutSupportKHR", vkGetDescriptorSetLayoutSupportKHR},
     {"vkGetDeviceAccelerationStructureCompatibilityKHR", vkGetDeviceAccelerationStructureCompatibilityKHR},
+    {"vkGetDeviceBufferMemoryRequirements", vkGetDeviceBufferMemoryRequirements},
     {"vkGetDeviceBufferMemoryRequirementsKHR", vkGetDeviceBufferMemoryRequirementsKHR},
     {"vkGetDeviceGroupPeerMemoryFeatures", vkGetDeviceGroupPeerMemoryFeatures},
     {"vkGetDeviceGroupPeerMemoryFeaturesKHR", vkGetDeviceGroupPeerMemoryFeaturesKHR},
     {"vkGetDeviceGroupPresentCapabilitiesKHR", vkGetDeviceGroupPresentCapabilitiesKHR},
     {"vkGetDeviceGroupSurfacePresentModesKHR", vkGetDeviceGroupSurfacePresentModesKHR},
+    {"vkGetDeviceImageMemoryRequirements", vkGetDeviceImageMemoryRequirements},
     {"vkGetDeviceImageMemoryRequirementsKHR", vkGetDeviceImageMemoryRequirementsKHR},
+    {"vkGetDeviceImageSparseMemoryRequirements", vkGetDeviceImageSparseMemoryRequirements},
     {"vkGetDeviceImageSparseMemoryRequirementsKHR", vkGetDeviceImageSparseMemoryRequirementsKHR},
     {"vkGetDeviceMemoryCommitment", vkGetDeviceMemoryCommitment},
     {"vkGetDeviceMemoryOpaqueCaptureAddress", vkGetDeviceMemoryOpaqueCaptureAddress},
@@ -4211,6 +4572,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkGetPipelineExecutableInternalRepresentationsKHR", vkGetPipelineExecutableInternalRepresentationsKHR},
     {"vkGetPipelineExecutablePropertiesKHR", vkGetPipelineExecutablePropertiesKHR},
     {"vkGetPipelineExecutableStatisticsKHR", vkGetPipelineExecutableStatisticsKHR},
+    {"vkGetPrivateData", vkGetPrivateData},
     {"vkGetPrivateDataEXT", vkGetPrivateDataEXT},
     {"vkGetQueryPoolResults", vkGetQueryPoolResults},
     {"vkGetQueueCheckpointData2NV", vkGetQueueCheckpointData2NV},
@@ -4237,6 +4599,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkQueuePresentKHR", vkQueuePresentKHR},
     {"vkQueueSetPerformanceConfigurationINTEL", vkQueueSetPerformanceConfigurationINTEL},
     {"vkQueueSubmit", vkQueueSubmit},
+    {"vkQueueSubmit2", vkQueueSubmit2},
     {"vkQueueSubmit2KHR", vkQueueSubmit2KHR},
     {"vkQueueWaitIdle", vkQueueWaitIdle},
     {"vkReleasePerformanceConfigurationINTEL", vkReleasePerformanceConfigurationINTEL},
@@ -4252,6 +4615,7 @@ static const struct vulkan_func vk_device_dispatch_table[] =
     {"vkSetDebugUtilsObjectTagEXT", vkSetDebugUtilsObjectTagEXT},
     {"vkSetDeviceMemoryPriorityEXT", vkSetDeviceMemoryPriorityEXT},
     {"vkSetEvent", vkSetEvent},
+    {"vkSetPrivateData", vkSetPrivateData},
     {"vkSetPrivateDataEXT", vkSetPrivateDataEXT},
     {"vkSignalSemaphore", vkSignalSemaphore},
     {"vkSignalSemaphoreKHR", vkSignalSemaphoreKHR},
@@ -4315,6 +4679,7 @@ static const struct vulkan_func vk_phys_dev_dispatch_table[] =
     {"vkGetPhysicalDeviceSurfaceFormatsKHR", vkGetPhysicalDeviceSurfaceFormatsKHR},
     {"vkGetPhysicalDeviceSurfacePresentModesKHR", vkGetPhysicalDeviceSurfacePresentModesKHR},
     {"vkGetPhysicalDeviceSurfaceSupportKHR", vkGetPhysicalDeviceSurfaceSupportKHR},
+    {"vkGetPhysicalDeviceToolProperties", vkGetPhysicalDeviceToolProperties},
     {"vkGetPhysicalDeviceToolPropertiesEXT", vkGetPhysicalDeviceToolPropertiesEXT},
     {"vkGetPhysicalDeviceWin32PresentationSupportKHR", vkGetPhysicalDeviceWin32PresentationSupportKHR},
 };
